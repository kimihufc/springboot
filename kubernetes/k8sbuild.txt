记录k8s搭建日志
第一 k8s和docker有个版本对应 (本文采用k8s 1.5 docker 1.8)
第二 网络等swap全部关闭
第三 从节点加入的时候  token超过24小时就会失效 需要重新生成
一主一从
1 修改
/etc/hostname  主为master  从为worker
/etc/hosts 加入主ip master 从ip worker
systemctl stop firewalld
systemctl disable firewalld
/etc/selinux/config  设置SELINUX=disabled
/etc/fstab 注释swap
最后 reboot -h 重启服务器

2 安装docker 18.09
先配置源
yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum makecache fast
再安装
yum install docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9-3.el7 containerd.io
启动
systemctl enable docker
systemctl start docker

3接入kubernetes
加入国内镜像
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF
安装
yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl enable kubelet && systemctl start kubelet
配置网络
cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

4初始化master
配置
kubeadm config print init-defaults > kubeadm-init.yaml
将advertiseAddress: 1.2.3.4修改为本机地址
将imageRepository: k8s.gcr.io修改为imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
下载
kubeadm config images pull --config kubeadm-init.yaml
初始化
kubeadm init --config kubeadm-init.yaml
最后记录  kubeadm join  保存  (从节点加入的时候使用)
配置用户
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
修改节点网络
wget https://docs.projectcalico.org/v3.8/manifests/calico.yaml
打开calico.yaml, 将192.168.0.0/16修改为10.96.0.0/12
执行kubectl apply -f calico.yaml
最后查询节点状态
kubectl get node

从节点执行(刚才保存的命令)   kubeadm join

5 安装控制面板(随便)
下载
wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml
安装
kubectl apply -f recommended.yaml
创建dashboard-adminuser.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system
执行 kubectl apply -f dashboard-adminuser.yaml
生成证书
grep 'client-certificate-data' ~/.kube/config | head -n 1 | awk '{print $2}' | base64 -d >> kubecfg.crt
grep 'client-key-data' ~/.kube/config | head -n 1 | awk '{print $2}' | base64 -d >> kubecfg.key
openssl pkcs12 -export -clcerts -inkey kubecfg.key -in kubecfg.crt -out kubecfg.p12 -name "kubernetes-client"
第三条命令(建议不要输入密码 直接回车)
下载证书到本地
scp root@10.33.30.92:/root/.kube/kubecfg.p12 ./
然后在自己电脑https://{k8s-master-ip}:6443/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
把刚才的证书导入一下
选择token
在master获取token
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')
